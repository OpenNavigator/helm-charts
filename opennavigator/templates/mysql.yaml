apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-mysql
  namespace: {{ .Release.Namespace }}
spec:
  ports:
    - port: 3306
  selector:
    app: {{ .Release.Name }}-mysql
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-mysql
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}-mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-mysql
    spec:
      containers:
        - name: mysql
          image: "{{ default .Values.mysql.image.registry }}/{{ .Values.mysql.image.repository }}:{{ .Values.mysql.image.tag }}"
          imagePullPolicy: {{ .Values.mysql.image.pullPolicy }}
          resources:
            {{- toYaml .Values.mysql.resources | nindent 12 }}
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: {{ .Values.mysql.password }}
          ports:
            - containerPort: 3306
              name: mysql
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
            - name: mysql-initdb
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-mysql
        - name: mysql-initdb
          configMap:
            name: {{ .Release.Name }}-mysql-initdb-config
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Release.Name }}-mysql
  namespace: {{ .Release.Namespace }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-mysql-initdb-config
  namespace: {{ .Release.Namespace }}
data:
  initdb.sql: |
    CREATE DATABASE IF NOT EXISTS opennavigator;